'use strict';require('ts-jest').install();"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const supertest = require("supertest");
const request = supertest('http://localhost:4000');
describe('GET /en/check-order/search', () => {
    it('should return 200 OK', () => {
        return request
            .get('/en/check-order/search')
            .expect(200);
    });
});
describe('GET /zh-hk/check-order/search', () => {
    it('should return 200 OK', () => {
        return request
            .get('/zh-hk/check-order/search')
            .expect(200);
    });
});
describe('GET /en/check-order/send-query', () => {
    // sdvsdvd
    // ec3ce6c0-bbad-11e7-91d8-db9c77e66874
    /*
    .post('/api/book/save/')
                  .type('form')
                  .send(data.book)
                  .set('Accept', /application\/json/)
                  .expect(201)
                  .end(function (err, res) { done(); });
    */
    it('should return good reuslt', (done) => {
        request.post('/en/check-order/send-query', JSON.stringify({
            name: 'sdvsdvd',
            referenceNo: 'ec3ce6c0-bbad-11e7-91d8-db9c77e66874'
        }))
            .set('Accept', /application\/json/)
            .expect(200)
            .end((err, res) => {
            console.log(res);
            done();
        });
        // .then((response) => {
        //   console.log(response);
        //   expect(response).toBe('success');
        // });
    });
});
//
// const todo1: CreateTodoEntity = {text: 'foo'};
// 		const todo2: CreateTodoEntity = {text: 'foo2'};
// 		let createdTodo1: TodoEntity;
// 		let createdTodo2: TodoEntity;
// 		let updatedTodo: TodoEntity;
//
// 		return Promise.all([
// 			client.post(TODOS_PATH).send(todo1).expect(200),
// 			client.post(TODOS_PATH).send(todo2).expect(200)
// 		])
// 			.then(
// 				([response1, response2]: Response[]) => {
// 					createdTodo1 = response1.body;
// 					createdTodo2 = response2.body;
//
// 					expect(createdTodo1.id).toBeDefined();
// 					expect(createdTodo1.text).toBe(todo1.text);
// 					expect(createdTodo2.id).toBeDefined();
// 					expect(createdTodo2.text).toBe(todo2.text);
//
// 					return client.get(TODOS_PATH).expect(200);
// 				})
// 			.then(
// 				(findResponse: Response) => {
// 					const todos: TodoEntity[] = findResponse.body;
//
// 					expect(todos).toEqual([createdTodo2, createdTodo1]);
//
// 					return client.patch(TODOS_PATH)
// 						.send({...createdTodo2, text: 'foo3'})
// 						.expect(200);
// 				})
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tPcmRlci50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZmlsZTovLy8vaG9tZS9rZXYvSEswMS9ISzAxLVRlc3QvdGVzdC9jaGVja09yZGVyLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx1Q0FBdUM7QUFHdkMsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLHVCQUF1QixDQUFDLENBQUM7QUFFbkQsUUFBUSxDQUFDLDRCQUE0QixFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsc0JBQXNCLEVBQUUsR0FBRyxFQUFFO1FBQzlCLE1BQU0sQ0FBQyxPQUFPO2FBQ1gsR0FBRyxDQUFDLHdCQUF3QixDQUFDO2FBQzdCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNqQixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDO0FBRUgsUUFBUSxDQUFDLCtCQUErQixFQUFFLEdBQUcsRUFBRTtJQUM3QyxFQUFFLENBQUMsc0JBQXNCLEVBQUUsR0FBRyxFQUFFO1FBQzlCLE1BQU0sQ0FBQyxPQUFPO2FBQ1gsR0FBRyxDQUFDLDJCQUEyQixDQUFDO2FBQ2hDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNqQixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDO0FBSUgsUUFBUSxDQUFDLGdDQUFnQyxFQUFFLEdBQUcsRUFBRTtJQUM5QyxVQUFVO0lBQ1YsdUNBQXVDO0lBQ3ZDOzs7Ozs7O01BT0U7SUFDRixFQUFFLENBQUMsMkJBQTJCLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUN2QyxPQUFPLENBQUMsSUFBSSxDQUNSLDRCQUE0QixFQUFFLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDM0MsSUFBSSxFQUFFLFNBQVM7WUFDZixXQUFXLEVBQUUsc0NBQXNDO1NBQ3BELENBQUMsQ0FDSDthQUNBLEdBQUcsQ0FBQyxRQUFRLEVBQUUsbUJBQW1CLENBQUM7YUFDbEMsTUFBTSxDQUFDLEdBQUcsQ0FBQzthQUNYLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRTtZQUNoQixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2pCLElBQUksRUFBRSxDQUFDO1FBQ1QsQ0FBQyxDQUFDLENBQUM7UUFDSCx3QkFBd0I7UUFDeEIsMkJBQTJCO1FBQzNCLHNDQUFzQztRQUN0QyxNQUFNO0lBR1YsQ0FBQyxDQUFDLENBQUM7QUFFTCxDQUFDLENBQUMsQ0FBQztBQUVILEVBQUU7QUFDRixpREFBaUQ7QUFDakQsb0RBQW9EO0FBQ3BELGtDQUFrQztBQUNsQyxrQ0FBa0M7QUFDbEMsaUNBQWlDO0FBQ2pDLEVBQUU7QUFDRix5QkFBeUI7QUFDekIsc0RBQXNEO0FBQ3RELHFEQUFxRDtBQUNyRCxPQUFPO0FBQ1AsWUFBWTtBQUNaLGdEQUFnRDtBQUNoRCxzQ0FBc0M7QUFDdEMsc0NBQXNDO0FBQ3RDLEVBQUU7QUFDRiw4Q0FBOEM7QUFDOUMsbURBQW1EO0FBQ25ELDhDQUE4QztBQUM5QyxtREFBbUQ7QUFDbkQsRUFBRTtBQUNGLGtEQUFrRDtBQUNsRCxTQUFTO0FBQ1QsWUFBWTtBQUNaLG9DQUFvQztBQUNwQyxzREFBc0Q7QUFDdEQsRUFBRTtBQUNGLDREQUE0RDtBQUM1RCxFQUFFO0FBQ0YsdUNBQXVDO0FBQ3ZDLCtDQUErQztBQUMvQyxzQkFBc0I7QUFDdEIsU0FBUyJ9